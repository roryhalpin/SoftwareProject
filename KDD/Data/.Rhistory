titanicData <- read.csv("titanic.csv", header=T, na.strings=c(""),stringsAsFactors = T)
library(Amelia)
titanicData$Survived <- as.factor(titanicData$Survived)
titanicData$Pclass <- as.factor(titanicData$Pclass)
sapply(titanicData,function(x) sum(is.na(x)))
missmap(titanicData, main = "Missing valuses vs observed")
paste("PassengerId ", titanicData[!is.na(titanicData$Embarked), 1], " needs to be corrected")
paste("PassengerId ", titanicData[is.na(titanicData$Embarked), 1], " needs to be corrected")
library(dplyr)
embarked <- titanicData %>%
filter(PassengerId != 62 & PassengerId !=830)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggthemes)
library(scales)
ggplot(embarked, aes(x = Embarked, y = Fare, fill = factor(Pclass)))+
geom_boxplot() +
geom_hline(aes(yintercept=80), #<--- the price known for one passenger
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
titanicData <- read.csv("titanic.csv", header=T, na.strings=c(""),stringsAsFactors = T)
install.packages("Amelia")
library(Amelia)
titanicData$Survived <- as.factor(titanicData$Survived)
titanicData$Pclass <- as.factor(titanicData$Pclass)
sapply(titanicData,function(x) sum(is.na(x)))
missmap(titanicData, main = "Missing valuses vs observed")
titanicData <- titanicData[!is.na(titanicData$Embarked),]
paste("PassengerId ", titanicData[is.na(titanicData$Embarked), 1], " needs to be corrected")
library(dplyr)
embarked <- titanicData %>%
filter(PassengerId != 62 & PassengerId !=830)
library(ggplot2)
library(ggthemes)
library(scales)
#use ggplot2 to visualise embarkment, passenger class and median fare
ggplot(embarked, aes(x = Embarked, y = Fare, fill = factor(Pclass)))+
geom_boxplot() +
geom_hline(aes(yintercept=80), #<--- the price known for one passenger
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
barplot(table(titanicData$Survived))
barplot(table(titanicData$Sex))
titanicData$Embarked[c(62, 830)] <- 'C'
#
# Lecture 02 Code
#
#
library(moments)
#
mean(iris$Sepal.Length)
median(iris$Sepal.Length)
max(iris$Sepal.Length)
min(iris$Sepal.Length)
range(iris$Sepal.Length)
diff(range(iris$Sepal.Length))
var(iris$Sepal.Length)
sd(iris$Sepal.Length)
kurtosis(iris$Sepal.Length)
skewness(iris$Sepal.Length)
summary(iris$Sepal.Length)
summary(iris)
#
# Draw some charts
#
boxplot(iris$Sepal.Length)
boxplot(iris$Sepal.Length, horizontal = TRUE)
boxplot.stats(iris$Sepal.Length)
boxplot(iris[1:4])
hist(iris$Sepal.Length) #Histogram
hist(iris$Sepal.Length, main="Eugene's Histogram of Sepal Length", xlab="Sepal length") #add custom labels
#
# some scatter plots
#
plot(iris$Petal.Length, iris$Petal.Width, pch=21, bg=c("red","green3","blue")[unclass(iris$Species)], main="Edgar Anderson's Iris Data")
pairs(iris[1:4], main = "Edgar Anderson's Iris Data", pch = 22, bg = c("red", "green3", "blue")[unclass(iris$Species)])
#
# Simple Linear Regression
aptData <- read.csv(file="winnipeg_apt.csv",head=TRUE,sep=",")
head(aptData)
aptModel <- lm(price ~ sqft, data = aptData)
summary(aptModel)
#
# Student's t Test - compare Men and Women body dimensions
#
bodyDims <- read.csv(file="bdims.csv",head=TRUE,sep=",")
head(bodyDims)
nrow(bodyDims)
#
# Create two subsets
maleDims <- subset(bodyDims, sex == 1)
femaleDims <- subset(bodyDims, sex == 0)
#
# Check for Equality of Variance (H0 vars equal, H1 vars not equal)
var.test(maleDims$hgt, femaleDims$hgt) # F = 1.2048
#
# Compare height - Difference found
t.test(maleDims$hgt, femaleDims$hgt, alternative = "two.sided", paired = FALSE, var.equal = TRUE)
#
# Compare age - Difference found
t.test(maleDims$age, femaleDims$age, alternative = "two.sided", paired = FALSE)
#
# Paired t Test - Compare Poverty in USA (1990 % 1998)
#
povertyUSA <- read.csv(file="PovertyUSA.csv",head=TRUE,sep=",")
head(povertyUSA)
#
t.test(povertyUSA$Data.1998, povertyUSA$Data.1990, alternative = "less", paired = TRUE)
#
# One-way ANOVA
# Data source: https://bioinformatics-core-shared-training.github.io/linear-models-r/ANOVA.html
#
dietData = read.csv(file="diet.csv", header = TRUE, sep = ",")   # turn off 1st column with "row.names=1"
head(dietData)
#
# Calculate weight loss
weightLoss <- dietData$pre.weight - dietData$weight6weeks
#
# Visualize
boxplot(weightLoss ~ dietData$Diet,data=dietData,col="light gray", ylab = "Weight loss (kg)", xlab = "Diet type")
abline(h=0,col="blue")
#
class(dietData$Diet)  # "integer"
dietData$Diet <- as.factor(dietData$Diet)  # coerce to a factor
#
# Perform ANOVA in either of two ways
anova(lm(weightLoss ~ dietData$Diet, dietData))   # using "anova() with lm()"
#
table <- aov(weightLoss ~ dietData$Diet,data=dietData)  # using "aov()"
summary(table)   # ANOVA table
#
#  Chi Square Test for Goodness of Fit
#
# Road Safety Data - 7 days of week
# Observed (Mon - Sun): 12, 16, 10, 11, 10, 12, 18  (Total = 89)
# Expected: Same proportion every day 1/7
#
# Exam question BDA (Jan 2017)
chisq.test(c(12,16,10,11,10,12,18), p=c(1/7,1/7,1/7,1/7,1/7,1/7,1/7))
#
library(tidyverse)
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
rawCarReg
IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegA
IRLCarRegM
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
split(rawCarReg, rawCarReg$LOCATION)
rawCarReg$USA
rawCarReg$LOCATION
rawCarReg
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
rawCarReg
IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegA
IRLCarRegM
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
split(rawCarReg, rawCarReg$LOCATION)
rawCarReg
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
rawCarReg
IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegA
IRLCarRegM
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
rawCarReg
select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE))
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
rawCarReg
select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE))
rawMonthlydata <- subset(rawCarReg, FREQUENCY = 'M')
IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegA
IRLCarRegM
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
split(rawCarReg, rawCarReg$LOCATION)
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
rawCarReg
select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE))
rawMonthlydata <- subset(rawCarReg, FREQUENCY = 'M')
IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
IRLCarRegA
IRLCarRegM
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
# Display
rawCarReg
rawMonthlydata
# Creating dataframe with just monthly frequency data
rawMonthlydata <- subset(rawCarReg, FREQUENCY = 'M')
rawMonthlydata
# Drop columns we're not going to use
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE))
# Creating dataframe with just monthly frequency data
rawMonthlydata <- subset(rawCarReg, FREQUENCY = 'M')
rawMonthlydata
# Creating dataframe with just monthly frequency data
rawMonthlydata <- subset(rawCarReg, FREQUENCY == 'M')
rawMonthlydata
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
# Rename corrupted LOCATION column
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
# Display
rawCarReg
# Drop columns we're not going to use both by name and number
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE))
# Creating dataframe with just monthly frequency data
rawMonthlyData <- subset(rawCarReg, FREQUENCY == 'M')
# Creating an Irish Monthly and anual dataframes for initial testing
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
# IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
# Display out new dataframes
# IRLCarRegA
IRLCarRegM
# Write these new dataframes to a csv file
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
# write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
# Split the rawcar dataframe by each individual locaiton
split(rawCarReg, rawCarReg$LOCATION)
rawMonthlyData
# Drop columns we're not going to use both by name and number
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE, Flag.Codes))
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
# Rename corrupted LOCATION column
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
# Display
rawCarReg
# Drop columns we're not going to use both by name and number
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE, Flag.Codes))
# Creating dataframe with just monthly frequency data
rawMonthlyData <- subset(rawCarReg, FREQUENCY == 'M')
# Creating an Irish Monthly and anual dataframes for initial testing
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
# IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
# Display out new dataframes
# IRLCarRegA
IRLCarRegM
# Write these new dataframes to a csv file
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
# write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
# Split the rawcar dataframe by each individual locaiton
split(rawCarReg, rawCarReg$LOCATION)
rawMonthlyData
spread(rawMonthlyData, LOCATION, Value)
spread(rawMonthlyData, key = "LOCATION" ,value = "Value")
test <- spread(rawMonthlyData, key = "LOCATION" ,value = "Value")
View(test)
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
# Rename corrupted LOCATION column
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
# Display
rawCarReg
# Drop columns we're not going to use both by name
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE, Flag.Codes))
# Creating dataframe with just monthly frequency data
rawMonthlyData <- subset(rawCarReg, FREQUENCY == 'M')
# Creating several Monthly and anual dataframes for different countries for initial testing
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
CANCarRegM <- subset(rawCarReg, LOCATION =='CAN' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
# IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
# Display out new dataframes
# IRLCarRegA
IRLCarRegM
# Split the rawcar dataframe by each individual locaiton
split(rawCarReg, rawCarReg$LOCATION)
rawMonthlyData
test <- spread(rawMonthlyData, key = "LOCATION" ,value = "Value")
# Write these new dataframes to a csv file
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(CANCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
# write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
rawMonthlyData
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
# Rename corrupted LOCATION column
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
# Display
rawCarReg
# Drop columns we're not going to use both by name
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE, Flag.Codes))
# Creating dataframe with just monthly frequency data
rawMonthlyData <- subset(rawCarReg, FREQUENCY == 'M')
# Creating several Monthly and anual dataframes for different countries for initial testing
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
CANCarRegM <- subset(rawCarReg, LOCATION =='CAN' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
# IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
# Display out new dataframes
# IRLCarRegA
IRLCarRegM
# Split the rawcar dataframe by each individual locaiton
split(rawMonthlyData, rawCarReg$LOCATION)
rawMonthlyData
test <- spread(rawMonthlyData, key = "LOCATION" ,value = "Value")
# Write these new dataframes to a csv file
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(CANCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
# write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
# Rename corrupted LOCATION column
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
# Display
rawCarReg
# Drop columns we're not going to use both by name
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE, Flag.Codes))
# Creating dataframe with just monthly frequency data
rawMonthlyData <- subset(rawCarReg, FREQUENCY == 'M')
# Creating several Monthly and anual dataframes for different countries for initial testing
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
CANCarRegM <- subset(rawCarReg, LOCATION =='CAN' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
# IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
# Display out new dataframes
# IRLCarRegA
IRLCarRegM
# Split the rawcar dataframe by each individual locaiton
split(rawMonthlyData, rawCarReg$LOCATION)
rawMonthlyData
rawMonthlyData <- spread(rawMonthlyData, key = "LOCATION" ,value = "Value")
# Write these new dataframes to a csv file
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(CANCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
# write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
# Rename corrupted LOCATION column
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
# Display
rawCarReg
# Drop columns we're not going to use both by name
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE, Flag.Codes))
# Creating dataframe with just monthly frequency data
rawMonthlyData <- subset(rawCarReg, FREQUENCY == 'M')
# Creating several Monthly and anual dataframes for different countries for initial testing
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
CANCarRegM <- subset(rawCarReg, LOCATION =='CAN' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
# IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
# Display out new dataframes
# IRLCarRegA
IRLCarRegM
# Split the rawcar dataframe by each individual locaiton
# split(rawCarReg, rawCarReg$LOCATION)
rawMonthlyData
rawMonthlyData <- spread(rawMonthlyData, key = "LOCATION" ,value = "Value")
rawMonthlyData
# Write these new dataframes to a csv file
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(CANCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
# write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
library(tidyverse)
setwd("C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data")
read.csv("RawCarReg.csv") -> rawCarReg
# Rename corrupted LOCATION column
rawCarReg <- rawCarReg %>%
rename(
LOCATION = ï..LOCATION
)
# Display
rawCarReg
# Drop columns we're not going to use both by name
rawCarReg <- select(rawCarReg, -c(SUBJECT,INDICATOR,MEASURE, Flag.Codes))
# Creating dataframe with just monthly frequency data
rawMonthlyData <- subset(rawCarReg, FREQUENCY == 'M')
# Creating several Monthly and anual dataframes for different countries for initial testing
IRLCarRegM <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
CANCarRegM <- subset(rawCarReg, LOCATION =='CAN' & FREQUENCY =='M', select = c(LOCATION, FREQUENCY, TIME, Value))
# IRLCarRegA <- subset(rawCarReg, LOCATION =='IRL' & FREQUENCY =='A', select = c(LOCATION, FREQUENCY, TIME, Value))
# Display out new dataframes
# IRLCarRegA
IRLCarRegM
# Split the rawcar dataframe by each individual locaiton
# split(rawCarReg, rawCarReg$LOCATION)
rawMonthlyData
rawMonthlyData <- spread(rawMonthlyData, key = "LOCATION" ,value = "Value")
rawMonthlyData
# Write dataframes to a csv files
write.csv(IRLCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegM.csv", row.names = TRUE)
write.csv(CANCarRegM, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/CANCarRegM.csv", row.names = TRUE)
write.csv(rawMonthlyData, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/GlobalCarRegM.csv", row.names = TRUE)
# write.csv(IRLCarRegA, "C:/Users/sex-i/OneDrive/Documents/GitHub/Project/KDD/Data/IRLCarRegA.csv", row.names = TRUE)
